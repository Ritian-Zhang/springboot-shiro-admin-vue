package #packagePreName#.#packageExtName#.controller;


import com.github.pagehelper.Page;
import com.hfappkf.modules.admin.common.BaseAdminController;
import #packagePreName#.#packageExtName#.service.#className#Service;
import #packageName#.model.#className#;

import #packageName#.model.search.#className#Search;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletResponse;

/**
 * @author AUTHOR
 * @date CREATE_DATE
 **/
@Controller
@RequestMapping("#url_path#")
public class #className#Controller extends BaseAdminController {
    @Resource
    private #className#Service #serviceName#;

    /**
    * 列表
    */
    @RequiresPermissions("#auth_path#:list")
    @RequestMapping(value = "list",method = RequestMethod.GET)
    public ModelAndView list() {
        return new ModelAndView("#jspPath#list");
    }


    /**
     * 列表
     * @return
     */
    @RequiresPermissions("#auth_path#:list")
    @RequestMapping(value = "list",method = RequestMethod.POST)
    public void list(#className#Search search, HttpServletResponse response) {
        search.addOrderMap("id","desc");
        Page<#className#> pages = #serviceName#.page(search);
        writeJsonData(response,new PageVo(true,pages.getTotal(),pages.getResult()));
    }

    /**
     * 新增
     * @return
     */
    @RequiresPermissions("#auth_path#:create")
    @RequestMapping(value = "create",method = RequestMethod.GET)
    public ModelAndView create() {
        return new ModelAndView("#jspPath#create");
    }

    /**
     * 新增
     * @param entity
     * @param response
     */
    @RequiresPermissions("#auth_path#:create")
    @RequestMapping(value = "create",method = RequestMethod.POST)
    public void create(#className# entity, HttpServletResponse response){
        #serviceName#.save(entity);
        writeJsonData(response,"{\"success\":true,\"msg\":\"新增成功\"}");
    }

    /**
    * 更新
    */
    @RequiresPermissions("#auth_path#:update")
    @RequestMapping(value = "update",method = RequestMethod.GET)
    public ModelAndView update(@RequestParam int id) {
        ModelAndView mv = new ModelAndView("#jspPath#update");
        mv.addObject("entity",#serviceName#.get(id));
        return mv;
    }

    /**
     * 更新
     * @param entity
     * @param response
     */
    @RequiresPermissions("#auth_path#:update")
    @RequestMapping(value = "update",method = RequestMethod.POST)
    public void update(#className# entity, HttpServletResponse response){
        #serviceName#.update(entity);
        writeJsonData(response,"{\"success\":true,\"msg\":\"编辑成功\"}");
    }

    /**
     * 删除
     * @param response
     * @param id
     */
    @RequiresPermissions("#auth_path#:delete")
    @RequestMapping(value = "delete",method = RequestMethod.POST)
    public void delete(@RequestParam int id, HttpServletResponse response) {
        #serviceName#.delete(id);
        writeJsonData(response,"{\"success\":true,\"msg\":\"删除成功\"}");
    }


}
